library(bookdown)
bookdown::html_book()
bookdown::render_book(output_format = "HTML")
bookdown::render_book("index.Rmd", output_format = "HTML")
getwd()
render_book("index.Rmd")
?knitr::include_graphics
# compile HTML book
bookdown::render_book("index.Rmd", "bookdown::gitbook")
# compile HTML book
bookdown::render_book("index.Rmd", "bookdown::gitbook")
# compile HTML book
bookdown::render_book("index.Rmd", "bookdown::gitbook")
# compile HTML book
bookdown::render_book("index.Rmd", "bookdown::gitbook")
# compile HTML book
bookdown::render_book("index.Rmd", "bookdown::gitbook")
getwd()
d <- read_delim("Coronakomposita.txt", delim = "\t",
col_names = c("Freq", "word", "date"))
library(tidyverse)
library(googleVis)
library(collostructions)
d <- read_delim("Coronakomposita.txt", delim = "\t",
col_names = c("Freq", "word", "date"))
# Fehltreffer reduzieren
d <- d[-which(sapply(1:nrow(d), function(i) nchar(d$word[i]))<=8),]
# Groß- und Kleinschreibung ignorieren
d$word <- tolower(d$word)
# Köpfe
d$head <- gsub("corona-?", "", d$word)
# Interpunktion löschen
d$head <- gsub("[[:punct:]]", "", d$head)
d
str(d)
# compile HTML book
bookdown::render_book("index.Rmd", "bookdown::gitbook")
?summarise
# compile HTML book
bookdown::render_book("index.Rmd", "bookdown::gitbook")
d
str(d)
# Fehltreffer reduzieren
d <- d[-which(sapply(1:nrow(d), function(i) nchar(d$word[i]))<=8),]
# Groß- und Kleinschreibung ignorieren
d$word <- tolower(d$word)
# Köpfe
d$head <- gsub("corona-?", "", d$word)
# Interpunktion löschen
d$head <- gsub("[[:punct:]]", "", d$head)
# compile HTML book
bookdown::render_book("index.Rmd", "bookdown::gitbook")
# compile HTML book
bookdown::render_book("index.Rmd", "bookdown::gitbook")
d <- read_delim("Coronakomposita.txt", delim = "\t",
col_names = c("Freq", "word", "date"))
d
str(d)
# Fehltreffer reduzieren
d <- d[-which(sapply(1:nrow(d), function(i) nchar(d$word[i]))<=8),]
# Groß- und Kleinschreibung ignorieren
d$word <- tolower(d$word)
# Köpfe
d$head <- gsub("corona-?", "", d$word)
# Interpunktion löschen
d$head <- gsub("[[:punct:]]", "", d$head)
corona_tbl <- d %>% group_by(head) %>% summarise(
Freq = sum(Freq)
) %>% arrange(desc(Freq))
# einlesen
nouns <- read_delim("allnouns_dwds21.txt",
delim = "\t", quote="",
col_names = c("Freq_dwds21", "word"))
# alle in Kleinschreibung
nouns$word <- tolower(nouns$word)
# neu auszählen (um groß- und kleingeschriebene Varianten zu vereinen)
nouns <- nouns %>% group_by(word) %>% summarise(
Freq_dwds21 = sum(Freq_dwds21)
)
corona_tbl <- left_join(corona_tbl, nouns, by = c("head" = "word"))
corona_tbl <- replace_na(corona_tbl, list(Freq_dwds21 = 0))
corona_coll <- collex.dist(as.data.frame(corona_tbl))
head(corona_coll)
plot(corona_tbl$Freq)
plot(corona_tbl$Freq, type = "l")
plot(unique(corona_tbl$Freq), type = "l")
plot(corona_tbl$Freq, type = "b", xlab = "Absolute Frequenz")
plot(log1p(corona_tbl$Freq), type = "b", xlab = "Absolute Frequenz")
plot(log1p(corona_tbl$Freq), type = "b", xlab = "Absolute Frequenz")
log(0)
log(1)
plot(log(corona_tbl$Freq), type = "b", ylab = "Absolute Frequenz")
# Log-Frequenz hinzufügen
corona_coll$O.CXN1
# Log-Frequenz hinzufügen
log(corona_coll$O.CXN1)
# Log-Frequenz hinzufügen
corona_coll$LogFreq <- log(corona_coll$O.CXN1)
corona_coll$ASSOC
corona_coll$ASSOC %>% unique
ifelse(corona_coll$ASSOC=="Freq_dwds21", corona_coll$COLL.STR.LOGL, -corona_coll$COLL.STR.LOGL)
ifelse(corona_coll$ASSOC=="Freq_dwds21", -corona_coll$COLL.STR.LOGL, corona_coll$COLL.STR.LOGL)
corona_coll$collex <- ifelse(corona_coll$ASSOC=="Freq_dwds21", -corona_coll$COLL.STR.LOGL, corona_coll$COLL.STR.LOGL)
log(corona_coll$collex) %>% plot
which(corona_coll$collex==0)
# Kollexemstärke logarithmiert und je nach Assoziationsrichtung positiv oder negativ
corona_coll$collex <- log(corona_coll$COLL.STR.LOGL)
corona_coll$collex <- ifelse(corona_coll$ASSOC=="Freq_dwds21", -corona_coll$collex, corona_coll$collex)
corona_coll
left_join(d, corona_coll, by = c("head" = "COLLEX"))
left_join(d, corona_coll, by = c("head" = "COLLEX"), all.x = T)
left_join(d, select(corona_coll, COLLEX, collex), by = c("head" = "COLLEX"), all.x = T)
left_join(d, corona_coll, by = c("head" = "COLLEX"), all.x = T)
d <- left_join(d, corona_coll, by = c("head" = "COLLEX"), all.x = T)
d$LogFreq_per_date <- log(d$Freq)
bubble <- gvisMotionChart(d, idvar = "head",
timevar = "date")
d %>% group_by(head, date) %>% summarise(
Freq = sum(Freq),
collex = unique(collex)
)
d2 <- d %>% group_by(head, date) %>% summarise(
Freq = sum(Freq),
collex = unique(collex)
)
# tabulieren:
d2 <- d %>% group_by(head, date) %>% summarise(
Freq = sum(Freq),
Freq_in_entire_dataset = unique(O.CXN1),
collex = unique(collex)
)
d2
# Jahr-Spalte
gsub("-.*", "", d2$date)
# Jahr-Spalte
d2$year <- gsub("-.*", "", d2$date)
# nur 2020
d2 <- filter(d2, year == "2020")
# Frequenz > 5
filter(d2, Freq_in_entire_dataset >= 5)
# Frequenz > 5
d2 <- filter(d2, Freq_in_entire_dataset >= 5)
bubble <- gvisMotionChart(d2, idvar = "head",
timevar = "date")
bubble
d2
# tabulieren:
d2 <- d %>% group_by(head, date) %>% summarise(
Freq = sum(Freq),
Freq_in_entire_dataset = unique(O.CXN1),
collex = unique(collex)
)
d2
bubble <- gvisMotionChart(d2, idvar = "head",
timevar = "date")
d2_tbl <-  d2 %>% select(head, date) %>% table %>% as.data.frame(stringsAsFactors = F)
d2_tbl
d2_tbl$date <- d2_tbl$date %>% as_date()
library(lubridate)
d2_tbl$date <- d2_tbl$date %>% as_date()
colnames(d2_tbl) <- c("head", "date", "Freq_on_date")
d2_tbl2 <- left_join(d2_tbl, d2, by = c("head", "date"))
d2_tbl3 <- replace_na(d2_tbl2, list(Freq = 0, logFreq = 0, diff_rel = 0))
# tabellarisches Format
d2_tbl <-  d2 %>% select(head, date) %>% table %>% as.data.frame(stringsAsFactors = F)
d2_tbl$date <- d2_tbl$date %>% as_date()
colnames(d2_tbl) <- c("head", "date", "Freq_on_date")
d2_tbl2 <- left_join(d2_tbl, d2, by = c("head", "date"))
d2_tbl3 <- replace_na(d2_tbl2, list(Freq = 0, logFreq = 0, diff_rel = 0))
# GoogleMotionChart erstellen...
bubble <- gvisMotionChart(filter(select(d2_tbl4, head, date, logFreq, diff_rel, COLL.STR.LOGL, collex, collex2), logFreq > 0),
idvar = "head",
sizevar = "logFreq",
yvar="logFreq",
xvar="collex2",
timevar = "date")
# mit Kollexemtabelle vereinigen
d2_tbl4 <- left_join(d2_tbl4, corona_coll, by = c("head" = "COLLEX"))
# mit Kollexemtabelle vereinigen
d2_tbl4 <- left_join(d2_tbl3, corona_coll, by = c("head" = "COLLEX"))
d2_tbl3$collex
# Kollexemstärke logarithmieren
d2_tbl4$collex <- ifelse(d2_tbl4$ASSOC=="Freq_dwds21", -d2_tbl4$COLL.STR.LOGL, d2_tbl4$COLL.STR.LOGL)
d2_tbl4$collex2 <- ifelse(d2_tbl4$ASSOC=="Freq_dwds21", -log1p(d2_tbl4$COLL.STR.LOGL), log1p(d2_tbl4$COLL.STR.LOGL))
# GoogleMotionChart erstellen...
bubble <- gvisMotionChart(filter(select(d2_tbl4, head, date, logFreq, diff_rel, COLL.STR.LOGL, collex, collex2), logFreq > 0),
idvar = "head",
sizevar = "logFreq",
yvar="logFreq",
xvar="collex2",
timevar = "date")
# Frequenz logarithmieren
d2_tbl4$logFreq <- log(d2_tbl4$Freq_on_date)
# GoogleMotionChart erstellen...
bubble <- gvisMotionChart(filter(select(d2_tbl4, head, date, logFreq, diff_rel, COLL.STR.LOGL, collex, collex2), logFreq > 0),
idvar = "head",
sizevar = "logFreq",
yvar="logFreq",
xvar="collex2",
timevar = "date")
# GoogleMotionChart erstellen...
bubble <- gvisMotionChart(filter(select(d2_tbl4, head, date, logFreq, COLL.STR.LOGL, collex, collex2), logFreq > 0),
idvar = "head",
sizevar = "logFreq",
yvar="logFreq",
xvar="collex2",
timevar = "date")
# ... und mit dem Plot-Befehl aktivieren
plot(bubble)
# compile HTML book
bookdown::render_book("index.Rmd", "bookdown::gitbook")
rm(list(ls))
rm(list=ls())
library(tidyverse)
library(googleVis)
library(lubridate)
library(collostructions)
d <- read_delim("Coronakomposita.txt", delim = "\t",
col_names = c("Freq", "word", "date"))
d
str(d)
# Fehltreffer reduzieren
d <- d[-which(sapply(1:nrow(d), function(i) nchar(d$word[i]))<=8),]
# Groß- und Kleinschreibung ignorieren
d$word <- tolower(d$word)
# Köpfe
d$head <- gsub("corona-?", "", d$word)
# Interpunktion löschen
d$head <- gsub("[[:punct:]]", "", d$head)
corona_tbl <- d %>% group_by(head) %>% summarise(
Freq = sum(Freq)
) %>% arrange(desc(Freq))
# einlesen
nouns <- read_delim("allnouns_dwds21.txt",
delim = "\t", quote="",
col_names = c("Freq_dwds21", "word"))
# alle in Kleinschreibung
nouns$word <- tolower(nouns$word)
# neu auszählen (um groß- und kleingeschriebene Varianten zu vereinen)
nouns <- nouns %>% group_by(word) %>% summarise(
Freq_dwds21 = sum(Freq_dwds21)
)
corona_tbl <- left_join(corona_tbl, nouns, by = c("head" = "word"))
corona_tbl <- replace_na(corona_tbl, list(Freq_dwds21 = 0))
corona_coll <- collex.dist(as.data.frame(corona_tbl))
head(corona_coll)
plot(corona_tbl$Freq, type = "b", ylab = "Absolute Frequenz")
plot(log(corona_tbl$Freq), type = "b", ylab = "Logarithmierte Frequenz")
# Log-Frequenz hinzufügen
corona_coll$LogFreq <- log(corona_coll$O.CXN1)
d <- left_join(d, corona_coll, by = c("head" = "COLLEX"), all.x = T)
d$LogFreq_per_date <- log(d$Freq)
# tabulieren:
d2 <- d %>% group_by(head, date) %>% summarise(
Freq = sum(Freq),
Freq_in_entire_dataset = unique(O.CXN1),
collex = unique(collex)
)
# tabulieren:
d2 <- d %>% group_by(head, date) %>% summarise(
Freq = sum(Freq),
collex = unique(collex)
)
# tabulieren:
d2 <- d %>% group_by(head, date) %>% summarise(
Freq = sum(Freq),
Freq_in_entire_dataset = unique(O.CXN1)
)
# Jahr-Spalte
d2$year <- gsub("-.*", "", d2$date)
# nur 2020
d2 <- filter(d2, year == "2020")
# Frequenz > 5
d2 <- filter(d2, Freq_in_entire_dataset >= 5)
# tabellarisches Format
d2_tbl <-  d2 %>% select(head, date) %>% table %>% as.data.frame(stringsAsFactors = F)
d2_tbl$date <- d2_tbl$date %>% as_date()
colnames(d2_tbl) <- c("head", "date", "Freq_on_date")
d2_tbl2 <- left_join(d2_tbl, d2, by = c("head", "date"))
# mit Kollexemtabelle vereinigen
d2_tbl4 <- left_join(d2_tbl3, corona_coll, by = c("head" = "COLLEX"))
d2_tbl3 <- replace_na(d2_tbl2, list(Freq = 0, logFreq = 0, diff_rel = 0))
# mit Kollexemtabelle vereinigen
d2_tbl4 <- left_join(d2_tbl3, corona_coll, by = c("head" = "COLLEX"))
# Frequenz logarithmieren
d2_tbl4$logFreq <- log(d2_tbl4$Freq_on_date)
# Kollexemstärke logarithmieren
d2_tbl4$collex <- ifelse(d2_tbl4$ASSOC=="Freq_dwds21", -d2_tbl4$COLL.STR.LOGL, d2_tbl4$COLL.STR.LOGL)
d2_tbl4$collex2 <- ifelse(d2_tbl4$ASSOC=="Freq_dwds21", -log1p(d2_tbl4$COLL.STR.LOGL), log1p(d2_tbl4$COLL.STR.LOGL))
# compile HTML book
bookdown::render_book("index.Rmd", "bookdown::gitbook")
# compile HTML book
bookdown::render_book("index.Rmd", "bookdown::gitbook")
